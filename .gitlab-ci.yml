image: node:16.16.0

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy
  - test-e2e
  
cache:
  paths:
    - node_modules/

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - npm install
    - npm run build

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - npm run test:unit

deploy_preview:
  stage: deploy
  except:
    - main
  script:
    - npm install --global vercel
    - vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
    - vercel build --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt  --token=$VERCEL_TOKEN

deploy_production:
  stage: deploy
  only:
    - main
  script:
    - npm install --global vercel
    - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - vercel build --prod --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
    - DEPLOYMENT_URL=$(vercel -t $VERCEL_TOKEN --confirm)
    - echo $DEPLOYMENT_URL >vercel_deployment_url.txt

  artifacts:
    when: on_success
    paths:
      - vercel_deployment_url.txt

test-e2e-job:
  stage: test-e2e

  script:
    - DEPLOYMENT_URL=$(cat vercel_deployment_url.txt)
    - echo $DEPLOYMENT_URL

    # Update
    - apt-get update
    - apt-get install google-chrome-stable
    - run test:e2e @dev-env --baseUrl=$DEPLOYMENT_URL

  artifacts:
    when: on_failure
    paths:
      - ./logs

